java client is compiled in ubuntu.
see signing.txt for signing commands.


Note the the Identification being used to id a client is simply the 'common name' in the certificate, so this must be unique when creating your keys.


So far what is working:

create two seperate 'clients' (lets call them A and B) by creating 2 different private key pairs.
Create CSR's for both clients, get each other to sign them. Upload these signed certificates to the server using the client.

The server now knows A trusts B, B trusts A.

now upload a file, get both B to vouch for it using any certificate with its own common name. Get A to do the same. 

Now when someone tries to fetch the file, it will find the circle length ( ie 2 ), and only respond if the length is great enough.

note server must start fresh (ie no existing files)
note client commands are fickly at the moment

to upload:
java -jar oldTrustyClient.jar -a meme.txt -h 127.0.0.1:3002 -c 2

vouch for meme.txt, using test.cert:
java -jar ../../oldTrustyClient/dist/oldTrustyClient.jar -v meme.txt test.cert -h 127.0.0.1:3002 -c 2

